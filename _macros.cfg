#####################################################################
#	Macros
#####################################################################

[gcode_macro PROBE_TEST]
#   Druckkopf auf QGL und Z0 Position zum Proben
gcode:
    _CG28
    PARKCENTER
    PROBE_ACCURACY
    G90
    G0 X285 Y295 Z15 F8000
    PROBE_ACCURACY
    G90
    G0 X285 Y65 Z15 F8000
    PROBE_ACCURACY
    G90
    G0 X55 Y65 Z15 F8000
    PROBE_ACCURACY
    G90
    G0 X55 Y295 Z15 F8000
    PROBE_ACCURACY
    PARKCENTER

[gcode_macro FILAMENT_WECHSEL]
#   Druckkopf mittig übers bett
gcode:
    _CG28
    G90
    G0 X170 Y10 Z75 F8000

[gcode_macro PARK]
#   Druckkopf mittig übers bett
gcode:
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 30 %}
    G90
    G0 X280 Y350 Z30 F3600                          # move head up to 30
    {% else %}
    G90
    G0 X280 Y350 F3600
    {% endif %}

[gcode_macro PARKCENTER]
gcode:
    {% set Z = params.Z|default(35)|float %}
    SAVE_GCODE_STATE NAME=PARKCENTER_state
    _CG28                                           # Home if not already homed
    G90                                             # absolute positioning
    G0 X175 Y180 Z{Z} F12000                        # move to center
    RESTORE_GCODE_STATE NAME=PARKCENTER_state

[gcode_macro PRINT_START]
gcode:
    {% set BED = params.BED|int %}
    {% set EXTRUDER = params.EXTRUDER|int %}
    {% set CHAMBER = params.CHAMBER|default(0)|int %}
    {% set z_adjust = params.Z_ADJUST|default(0.0)|float %}
    _CASELIGHT_ON
    _NEVERMORE_ON    
    set_nozzle_leds_on
    BED_MESH_CLEAR                                  # clear mesh
    STATUS_HOMING
    _CG28                                           # Home the printer
    G90                                             # Use absolute coordinates
    PARKCENTER                                      # Move to parkcenter
    STATUS_HEATING
    M117 Heating...
#    _HEATER_ON
    M106 S128                                       # set print fan to half speed
    M140 S{BED}                                     # Start bed heating
    M190 S{BED}                                     # Wait for bed to reach temperature
    PARK
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={(CHAMBER|float * 0.80)|round}
    M109 S150                                       # Set and wait for nozzle to reach temperature
    clean_nozzle
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL                              
    G28 Z
    STATUS_MESHING
    BED_MESH_CALIBRATE                             # adaptive bed mesh  
    PARK
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=55
    STATUS_HEATING
    M109 S{EXTRUDER}                               # Set and wait for nozzle to reach temperature
    purge_nozzle
    clean_nozzle
    M117 Start Print pos...
    G90                                            # Use absolute coordinates
    G1 X175 Y180 Z15 F12000                        # Move the nozzle to the start coords
    G92 E0.0                                       # set extruder position to 0
    M117 Printing...
    STATUS_PRINTING
    G21                                            # set units to millimeters
    G90                                            # use absolute coordinates
    M83                                            # use relative distances for extrusion

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
  M400                                             # wait for buffer to clear
  G92 E0                                           # zero the extruder
  G1 E-10.0 F3600                                  # retract filament
  G91                                              # relative positioning
  G0 Z2.00 F20000                                  # move nozzle to remove stringing
  TURN_OFF_HEATERS                                 # bett und nozzle off 
  _CASELIGHT_OFF                                   # bauraumlicht off
  STATUS_OFF                                       # SB leds off
  M106 S64                                                         # PT fan auf 25 prozent
  G90                                                              # absolute positioning
  PARK                                                             # park nozzle at rear
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35     # vent until cooled down
  M107                                                             # turn off fan
  _NEVERMORE_END
  BED_MESH_CLEAR
  M117


#####################################################################
#  Macros to debug the printer variable
#####################################################################
[gcode_macro DUMP_PARAMETERS]
description: Debug: Print all entries of the printer object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

[gcode_macro DUMP_CONFIG]
description: Debug: Print all entries of the printer config object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer.configfile.config %}
    {% set show = ['printer', "bed_mesh VORON-0C-MUELLER"] %}
    {% if name1 is in show %}
      {% set param = "printer.configfile.config['%s'] = %s" % (name1, printer.configfile.config[name1]) %}
      {% set parameters.output = parameters.output +  param + "\n" %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters.output)}

[gcode_macro DUMP_SETTINGS]
description: Debug: Print all entries of the printer settings object
gcode:
  {%if 'S' in params %}
    {% set show = [params.S] %}
    {% set parameters = namespace(output = '') %}
    {% for name1 in printer.configfile.settings %}
      {% if name1 is in show %}
        {% for name2 in printer.configfile.settings[name1] %}
          {% set param = "printer.configfile.settings['%s'].%s = %s" % (name1, name2, printer.configfile.settings[name1][name2]) %}
          {% set parameters.output = parameters.output +  param + "\n" %}
        {% endfor %}
      {% endif %}
    {% endfor %}
    {action_respond_info(parameters.output)}
  {% else %}
    {action_respond_info("WARNING: parameter S needed call e.g. DUMP_SETTINGS S='printer'")}
  {% endif %}

## Use:
##   - DUMP_WARNINGS
[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% if 'warnings' not in printer.configfile %}
      {action_respond_info("klipper to old! Please update klipper first and run again")}
  {% else %}
    {% set parameters = ["printer.configfile.warnings:"] %}
    {% for warning in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
    {% endfor %}
    {action_respond_info(parameters|join("\n"))}
  {% endif %}
